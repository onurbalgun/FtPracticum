{"ast":null,"code":"import axios from \"axios\";\nconst apiEndpoint = \"http://localhost:8080/login\";\nexport function login(email, password) {\n  axios.post(apiEndpoint, {\n    email,\n    password\n  }).then(function (response) {\n    console.log(response);\n    localStorage.setItem(\"acces_token\", response.data.acces_token);\n    localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n  }).catch(function (error) {\n    console.log(error);\n  });\n  /* fetch(apiEndpoint,{\r\n     method:'POST'\r\n   })*/\n}\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(expectedError);\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}","map":{"version":3,"names":["axios","apiEndpoint","login","email","password","post","then","response","console","log","localStorage","setItem","data","acces_token","refresh_token","catch","error","interceptors","use","expectedError","status","Promise","reject","setJwt","jwt","defaults","headers","common"],"sources":["C:/Users/onur_/Desktop/FTPracticum/FrontEndReact/src/services/AuthService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiEndpoint= \"http://localhost:8080/login\";\r\n\r\nexport function login(email,password)\r\n{\r\n     axios.post(apiEndpoint,{email,password}).then(function (response) {\r\n        console.log(response);\r\n        localStorage.setItem(\"acces_token\",response.data.acces_token);\r\n        localStorage.setItem(\"refresh_token\",response.data.refresh_token);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n     /* fetch(apiEndpoint,{\r\n        method:'POST'\r\n      })*/\r\n}\r\n\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500\r\n  \r\n    if (!expectedError) {\r\n      console.log(expectedError);\r\n    }\r\n  \r\n    return Promise.reject(error)\r\n  })\r\n  \r\n  function setJwt(jwt) {\r\n    axios.defaults.headers.common['x-auth-token'] = jwt\r\n  }\r\n  "],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAE,6BAAnB;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAqBC,QAArB,EACP;EACKJ,KAAK,CAACK,IAAN,CAAWJ,WAAX,EAAuB;IAACE,KAAD;IAAOC;EAAP,CAAvB,EAAyCE,IAAzC,CAA8C,UAAUC,QAAV,EAAoB;IAC/DC,OAAO,CAACC,GAAR,CAAYF,QAAZ;IACAG,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmCJ,QAAQ,CAACK,IAAT,CAAcC,WAAjD;IACAH,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAqCJ,QAAQ,CAACK,IAAT,CAAcE,aAAnD;EACD,CAJF,EAKEC,KALF,CAKQ,UAAUC,KAAV,EAAiB;IACtBR,OAAO,CAACC,GAAR,CAAYO,KAAZ;EACD,CAPF;EAQA;AACL;AACA;AACC;AAGDhB,KAAK,CAACiB,YAAN,CAAmBV,QAAnB,CAA4BW,GAA5B,CAAgC,IAAhC,EAAuCF,KAAD,IAAW;EAC7C,MAAMG,aAAa,GACjBH,KAAK,CAACT,QAAN,IACAS,KAAK,CAACT,QAAN,CAAea,MAAf,IAAyB,GADzB,IAEAJ,KAAK,CAACT,QAAN,CAAea,MAAf,GAAwB,GAH1B;;EAKA,IAAI,CAACD,aAAL,EAAoB;IAClBX,OAAO,CAACC,GAAR,CAAYU,aAAZ;EACD;;EAED,OAAOE,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACD,CAXH;;AAaE,SAASO,MAAT,CAAgBC,GAAhB,EAAqB;EACnBxB,KAAK,CAACyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDH,GAAhD;AACD"},"metadata":{},"sourceType":"module"}